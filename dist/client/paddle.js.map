{"version":3,"sources":["../src/client/paddle.ts"],"names":[],"mappings":"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","file":"paddle.js","sourcesContent":["/**************************************************************************\r\n  Demo for controlling the paddle with cursor keys and touch\r\n\r\n  NOTE: This code has not been optimized for size or speed. It was written\r\n        with ease of understanding in mind.\r\n**************************************************************************/\r\nconst socket = io();\r\n\r\nwindow.addEventListener('load', this.paddle());\r\nlet currentPaddlePosition;\r\nlet paddleHeight;\r\nasync function paddle() { } {\r\n  // Get some information about the paddle. This information will never change.\r\n  // So it makes sense to get it only once to make the rest of the program faster.\r\n  const paddle = <HTMLDivElement>document.getElementsByClassName('leftpaddle')[0];\r\n  const paddle2 = <HTMLDivElement>document.getElementsByClassName('rightpaddle')[0];\r\n\r\n  paddleHeight = paddle.clientHeight;\r\n  const paddleHalfHeight = paddleHeight / 2;\r\n  currentPaddlePosition = paddle.clientTop;\r\n\r\n  // Controls the speed of the movement (number of pixels per interval)\r\n  const speed = 1;\r\n\r\n  // Two helper variables that contain values during movement with cursor\r\n  // keys. If currently not movement is happening, they are undefined.\r\n  let interval: NodeJS.Timeout;\r\n  let direction: number;\r\n\r\n  // Listen to keydown event\r\n  document.addEventListener('keydown', event => {\r\n    // We have to check whether a movement is already in progress. This is\r\n    // necessary because keydown events arrive often when key is\r\n    // continuously pressed.\r\n    if (!interval) {\r\n      switch (event.code) {\r\n        case 'ArrowDown':\r\n          direction = speed;\r\n          startMoving();\r\n          break;\r\n        case 'ArrowUp':\r\n          direction = speed * -1;\r\n          startMoving();\r\n          break;\r\n      }\r\n    }\r\n  });\r\n\r\n  // Listen to keyup event\r\n  document.addEventListener('keyup', event => {\r\n    switch (event.code) {\r\n      case 'ArrowDown':\r\n      case 'ArrowUp':\r\n        stopMoving();\r\n        break;\r\n    }\r\n  });\r\n\r\n  // Setup handler for touch displays (pan operation)\r\n  /*const hammertime = new Hammer(paddle);\r\n  hammertime.get('pan').set({ direction: Hammer.DIRECTION_DOWN | Hammer.DIRECTION_UP });\r\n  hammertime.on('pan', ev =>\r\n    // Put center of paddle to the center of the user's finger\r\n    movePaddle(ev.center.y - paddleHalfHeight));\r\n*/\r\n  /** Helper function that starts movement when keydown happens */\r\n  function startMoving(paddle?) {\r\n    // Move paddle every 4ms\r\n    interval = setInterval(() => movePaddle(currentPaddlePosition + direction, paddle), 4);\r\n  }\r\n\r\n  /** Helper function that stops movement when keyup happens */\r\n  function stopMoving() {\r\n    clearInterval(interval);\r\n    interval = direction = undefined;\r\n  }\r\n\r\n  /**\r\n   * Helper function that moves the paddle to a given position\r\n   * @param targetPosition Target position. No movement is done if target position is invalid\r\n   */\r\n  function movePaddle(targetPosition: number, p?): void {\r\n    if (targetPosition >= 0 && (targetPosition + paddleHeight) <= document.documentElement.clientHeight) {\r\n      currentPaddlePosition = targetPosition;\r\n      // Note the 'px' at the end of the coordinates for CSS. Don't\r\n      // forget it. Without the 'px', it doesn't work.\r\n      paddle.style.setProperty('top', `${currentPaddlePosition}px`);\r\n\r\n      // Send ArrowKey message to server\r\n      socket.emit('ArrowKey', currentPaddlePosition);\r\n      socket.emit('move1', currentPaddlePosition);\r\n\r\n    }\r\n  }\r\n  socket.on('ArrowKey', function (code) {\r\n    paddle2.style.setProperty('top', `${code}px`);\r\n    socket.emit('move2', code);\r\n\r\n  });\r\n}\r\n\r\n"]}