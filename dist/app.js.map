{"version":3,"sources":["../src/app.ts"],"names":[],"mappings":";;AAAA;;;;;2EAK2E;AAC3E,mCAAoC;AACpC,6BAA8B;AAC9B,6BAA8B;AAC9B,iCAAkC;AAClC,wCAAwC;AAExC,IAAI,OAAO,GAAW,CAAC,CAAC;AAExB,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACtC,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,IAAI,OAAO,GAAC,CAAC,CAAC;AACd,IAAI,OAAO,GAAC,CAAC,CAAC;AACd,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,+BAA+B,IAAI,KAAK,CAAC,CAAC,CAAC;AACjF,iDAAiD;AACjD,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,EAAE;IACtC,2BAA2B;IAC3B,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,IAAI;QAClC,iEAAiE;QACjE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAGH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,EAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;SAC7B;aAAM,IAAI,OAAO,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA;SAClC;aAAM;YACL,OAAO,GAAG,CAAC,CAAC;YACZ,OAAO,GAAC,CAAC,CAAC;YACV,OAAO,GAAC,CAAC,CAAC;SACX;QACD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;QACvB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IACrC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;QAEtB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;IACpC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IACtC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IACtC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,SAAS,EAAC,GAAE,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;IAE3C,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,SAAS,EAAC,GAAE,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;IAE3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"app.js","sourcesContent":["/**************************************************************************\r\n  Demo for setting up a socket.io server with express\r\n\r\n  NOTE: This code has not been optimized for size or speed. It was written\r\n        with ease of understanding in mind.\r\n**************************************************************************/\r\nimport express = require('express');\r\nimport http = require('http');\r\nimport path = require('path');\r\nimport sio = require('socket.io');\r\n//import ball=require ('./client/ball');\r\n\r\nlet players: number = 0;\r\n\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(express.static(path.join(__dirname, 'client')));\r\nconst server = http.createServer(app);\r\nconst port = 8080;\r\nlet player1=0;\r\nlet player2=0;\r\nserver.listen(port, () => console.log(`Server is listening on port ${port}...`));\r\n// Handle the connection of new websocket clients\r\nsio(server).on('connection', (socket) => {\r\n  // Handle an ArrowKey event\r\n  socket.on('ArrowKey', function (code) {\r\n    // Broadcast the event to all connected clients except the sender\r\n    socket.broadcast.emit('ArrowKey', code);\r\n  });\r\n\r\n  \r\n  socket.on('start', () => {\r\n    players++;\r\n    if (players > 1 && players < 3) {\r\n      console.log('start playing')\r\n    } else if (players < 2) {\r\n      console.log('waiting for player')\r\n    } else {\r\n      players = 1;\r\n      player1=0;\r\n      player2=0;\r\n    }\r\n    socket.broadcast.emit('play', players);\r\n  });\r\n  socket.on('left', code => {\r\n    socket.broadcast.emit('left', code)\r\n  });\r\n  socket.on('top', code => {\r\n    \r\n    socket.broadcast.emit('top', code)\r\n  });\r\n  socket.on('move2', code => {\r\n    socket.broadcast.emit('move1', code)\r\n  });\r\n  socket.on('move1', code => {\r\n    socket.broadcast.emit('move2', code)\r\n  });\r\n  socket.on('player1',()=>{\r\n    player1++;\r\n    socket.broadcast.emit('player1', player1)\r\n\r\n  });\r\n  socket.on('player2',()=>{\r\n    player2++;\r\n    socket.broadcast.emit('player2', player2)\r\n\r\n  });\r\n});\r\n"]}